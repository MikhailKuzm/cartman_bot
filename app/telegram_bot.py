import telebot
from app.inference import generate_cartman_reply
import random

# üîê –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram —Ç–æ–∫–µ–Ω
API_TOKEN = '###'
bot = telebot.TeleBot(API_TOKEN)

# üí¨ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
user_histories = {}

# üß± –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ [OTHER] ... [/OTHER] –∏ [CARTMAN]
def build_context(user_id, max_turns=5):
    history = user_histories.get(user_id, [])
    # –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ max_turns*2 —Ñ—Ä–∞–∑
    history = history[-(max_turns):]
    context = ""
    for turn in history:
        tag = "[OTHER]" if turn["role"] == "OTHER" else "[CARTMAN]"
        context += f"{tag} {turn['text']} {tag.replace('[', '[/')}\n"

    # üî• –µ—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç —Ä–µ–ø–ª–∏–∫ –ö–∞—Ä—Ç–º–∞–Ω–∞ ‚Äî –¥–æ–±–∞–≤–∏–º —à–∞–±–ª–æ–Ω
    if not any(turn["role"] == "CARTMAN" for turn in history):
        context += "[OTHER] –ö—Ç–æ —Ç—ã –≤–æ–æ–±—â–µ —Ç–∞–∫–æ–π? [/OTHER]\n[CARTMAN] –Ø ‚Äî –ö–∞—Ä—Ç–º–∞–Ω, —Ç—É–ø–∏—Ü–∞! [/CARTMAN]\n"
    return context, history


# /start
@bot.message_handler(commands=["start"])
def handle_start(message):
    pass

# üì¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_message(message):
    user_id = message.chat.id
    user_text = message.text.strip()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç + –Ω–æ–≤–∞—è —Ä–µ–ø–ª–∏–∫–∞
    context, history = build_context(user_id)
    full_context = f"{context}[OTHER] {user_text} [/OTHER]\n[CARTMAN]"
    reply = generate_cartman_reply(full_context)
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
    history.append({"role": "OTHER", "text": user_text})
    history.append({"role": "CARTMAN", "text": reply})
    user_histories[user_id] = history

    bot.send_message(chat_id=user_id, text=reply)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("ü§ñ –ö–∞—Ä—Ç–º–∞–Ω-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    bot.infinity_polling()
